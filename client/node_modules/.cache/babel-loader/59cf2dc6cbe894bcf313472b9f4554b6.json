{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw \"couldn't fetch the data !!!\";\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n      }).catch(err => {\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n};\n\n_s(useFetch, \"M1zsnnWymW50MkLkieRTr9h0HDU=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/youne/Desktop/reactProject/reactApp/src/components/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACMC,GAAG,IAAG;AACR,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,gBAAM,6BAAN;AACH;;AACD,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAND,EAOCH,IAPD,CAOMR,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAVD,EAWCS,KAXD,CAWQC,GAAD,IAAS;AACZR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACH,OAbD;AAcH,KAfS,EAeR,IAfQ,CAAV;AAiBH,GAlBQ,EAkBP,CAACf,GAAD,CAlBO,CAAT;AAmBH,CAxBD;;GAAMD,Q;;AA0BN,eAAeA,QAAf","sourcesContent":["import { useState , useEffect } from \"react\"\r\n\r\nconst useFetch = (url) => {\r\n    const [data , setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error ,setError] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            fetch(url)\r\n            .then(res =>{\r\n                if(!res.ok){\r\n                    throw(\"couldn't fetch the data !!!\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setData(data)\r\n                setIsPending(false)\r\n            })\r\n            .catch((err) => {\r\n                setError(err.message);\r\n            })\r\n        },1000)\r\n            \r\n    },[url])\r\n}\r\n\r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}